import numpy as np
import sounddevice as sd
import time
from datetime import datetime

# C·∫§U H√åNH TH√îNG S·ªê "B·∫ÆT CH√ì"
SAMPLE_RATE = 48000
THRESHOLD_DB = 75  # Ng∆∞·ª°ng ·ªìn ph·∫°t (t√≠nh b·∫±ng dB)
DURATION_ALERT = 3  # Th·ªùi gian ·ªìn v∆∞·ª£t ng∆∞·ª°ng tr∆∞·ªõc khi c·∫£nh b√°o (gi√¢y)

# Bi·∫øn to√†n c·ª•c
noise_history = []
is_alerting = False

def audio_callback(indata, frames, time, status):
    global noise_history, is_alerting
    
    # T√≠nh dB t·ª´ t√≠n hi·ªáu √¢m thanh
    rms = np.sqrt(np.mean(indata**2))
    db = 20 * np.log10(rms / (2**15)) + 94  # Chuy·ªÉn ƒë·ªïi sang dB
    
    # Ghi nh·∫≠n l·ªãch s·ª≠ ·ªìn √†o
    noise_history.append({
        'time': datetime.now(),
        'db': db,
        'raw_audio': indata.copy()
    })
    
    # Ph√°t hi·ªán "ch√≥ s·ªßa" - v∆∞·ª£t ng∆∞·ª°ng
    if db > THRESHOLD_DB:
        if not is_alerting:
            start_time = noise_history[-1]['time']
            # Ki·ªÉm tra n·∫øu ·ªìn k√©o d√†i
            for entry in reversed(noise_history[:-1]):
                if (noise_history[-1]['time'] - entry['time']).seconds >= DURATION_ALERT:
                    if all(e['db'] > THRESHOLD_DB for e in noise_history[-DURATION_ALERT*10:]):
                        activate_punishment()
                        is_alerting = True
                        break
    else:
        is_alerting = False

def activate_punishment():
    """K√≠ch ho·∫°t h√¨nh ph·∫°t s√°ng t·∫°o"""
    print("\nüö® PH√ÅT HI·ªÜN CH√ì S·ªíN! üö®")
    print("TH√îNG B√ÅO: L·ªõp h·ªçc ƒëang ·ªìn √†o qu√° m·ª©c cho ph√©p!")
    
    # Tu·ª≥ ch·ªçn h√¨nh ph·∫°t (b·ªè comment ƒë·ªÉ k√≠ch ho·∫°t):
    # 1. Ph√°t ti·∫øng c·∫£nh b√°o
    # sd.play(0.5 * np.sin(2 * np.pi * 1000 * np.arange(30000) / 48000), samplerate=48000)
    
    # 2. Ghi log v√†o file
    with open("noise_violations.log", "a") as f:
        f.write(f"{datetime.now()}: Noise violation - {max(e['db'] for e in noise_history[-30:])} dB\n")
    
    # 3. G·ª≠i c·∫£nh b√°o qua Telegram (c·∫ßn c√†i th∆∞ vi·ªán python-telegram-bot)
    # send_telegram_alert()

# Kh·ªüi ƒë·ªông h·ªá th·ªëng
print("üî• H·ªÜ TH·ªêNG GI√ÅM S√ÅT TR·∫¨T T·ª∞ L·ªöP H·ªåC üî•")
print(f"‚ö° ƒêang theo d√µi... Ng∆∞·ª°ng c·∫£nh b√°o: {THRESHOLD_DB} dB")

with sd.InputStream(callback=audio_callback, samplerate=SAMPLE_RATE, channels=1):
    while True:
        time.sleep(1)
        # Hi·ªÉn th·ªã m·ª©c √¢m thanh hi·ªán t·∫°i
        current_db = noise_history[-1]['db'] if noise_history else 0
        print(f"\rM·ª©c ·ªìn hi·ªán t·∫°i: {current_db:.1f} dB", end="", flush=True)